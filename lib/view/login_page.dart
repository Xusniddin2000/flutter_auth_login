import 'dart:convert';import 'package:dio/dio.dart';import 'package:flutter/foundation.dart';import 'package:flutter/material.dart';import 'package:flutter_auth_login/core/constants/constant.dart';class AuthLogin extends StatefulWidget {  const AuthLogin({Key? key}) : super(key: key);  @override  State<AuthLogin> createState() => _AuthLoginState();}class _AuthLoginState extends State<AuthLogin> {  TextEditingController  usernameController = TextEditingController();  TextEditingController  passwordController = TextEditingController();  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: AppBar(        title: Text("Flutter JWT Login"),             centerTitle: true,      ),      body: Padding(        padding: const EdgeInsets.all(10.0),        child: SafeArea(          child: Center(              child: Column(            mainAxisAlignment: MainAxisAlignment.center,            children: [              TextFormField(                controller: usernameController,                decoration: InputDecoration(                    labelText: "Username",                    border: OutlineInputBorder(),                    suffixIcon: Icon(Icons.email)),              ),              SizedBox(                height: 15,              ),              TextFormField(                controller: passwordController ,                obscureText: true,                decoration: InputDecoration(                    labelText: "Password",                    border: OutlineInputBorder(),                    suffixIcon: Icon(Icons.password_outlined)),              ),              SizedBox(                height: 45,              ),              OutlinedButton.icon(                  onPressed: () {                    login();                  },                  icon: Icon(                    Icons.login,                    size: 18,                  ),                  label: Text("Login"))            ],          )),        ),      ),    );  }   Future<void> login() async{       if(kDebugMode){         print(" User =${usernameController.text}");         print(" Password =${passwordController.text}");       }       Dio  dio=Dio();       dio.options.receiveTimeout=2000 as Duration?;       dio.options.connectTimeout=2000 as Duration?;       Map<String,String> headers={'Content-type':'application/json'};        try{        Response  response=await    dio.post(AppConstants.baseUrl,data: FormData.fromMap({               "username":usernameController.text,               "password":passwordController.text,          },));          if(response.statusCode==200){            print(response.data);          }        }on DioError catch(e){          print("Error  from Server: ${e.message.toString()}");        }    }}